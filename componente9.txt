9. Componente ConnectionDisplay (exibição de conexões) - client/src/components/dashboard/ConnectionDisplay.tsx

import { useState, useEffect } from "react";
import { useQuery, useQueryClient } from "@tanstack/react-query";
import { getWhatsappConnections } from "@/lib/api";
import { useToast } from "@/hooks/use-toast";
import ConnectionCard from "./ConnectionCard";
import { Button } from "@/components/ui/button";
import { Plus } from "lucide-react";
import { 
  Dialog, 
  DialogContent, 
  DialogDescription, 
  DialogHeader, 
  DialogTitle, 
  DialogTrigger
} from "@/components/ui/dialog";
import QRCodeScanner from "@/components/settings/QRCodeScanner";
import websocketClient from "@/lib/websocket";

export default function ConnectionDisplay() {
  const [newConnectionOpen, setNewConnectionOpen] = useState(false);
  const { toast } = useToast();
  const queryClient = useQueryClient();

  // Fetch WhatsApp connections
  const { data: connections, isLoading: isLoadingConnections } = useQuery({
    queryKey: ['/api/whatsapp/connections'],
    queryFn: getWhatsappConnections
  });

  // Configurar WebSocket listeners para atualizar os dados em tempo real
  useEffect(() => {
    // Função para lidar com mensagens do WebSocket
    const handleWebSocketMessage = (data: any) => {
      console.log("ConnectionDisplay recebeu mensagem WebSocket:", data);
      
      // Se for um evento de mudança de status do WhatsApp, atualizar os dados
      if (data.type === 'whatsapp_status') {
        console.log("Status WhatsApp alterado:", data.status);
        
        // Atualizar cache de conexões
        queryClient.invalidateQueries({ queryKey: ['/api/whatsapp/connections'] });
        
        // Notificar o usuário
        const statusText = data.status === 'connected' ? 'conectado' : 'desconectado';
        toast({
          title: `WhatsApp ${statusText}`,
          description: `O status da sua conexão WhatsApp foi alterado para ${statusText}.`,
          variant: data.status === 'connected' ? 'default' : 'destructive',
        });
      }
    };
    
    // Adicionar o listener
    websocketClient.addMessageListener(handleWebSocketMessage);
    
    // Remover o listener quando o componente for desmontado
    return () => {
      websocketClient.removeMessageListener(handleWebSocketMessage);
    };
  }, [queryClient, toast]);

  const filteredConnections = connections?.filter(
    (connection: any) => connection.status !== 'disconnected'
  ) || [];

  const activeConnectionsCount = filteredConnections.length;

  return (
    <div className="space-y-4">
      <div className="flex flex-col sm:flex-row sm:items-center justify-between gap-4">
        <div>
          <h2 className="text-2xl font-bold text-foreground tracking-tight">
            Conexões WhatsApp
          </h2>
          <p className="text-sm text-muted-foreground">
            Gerencie suas conexões de WhatsApp para automatização
          </p>
        </div>
        
        <Dialog open={newConnectionOpen} onOpenChange={setNewConnectionOpen}>
          <DialogTrigger asChild>
            <Button className="sm:w-auto w-full">
              <Plus className="h-4 w-4 mr-2" />
              Nova Conexão
            </Button>
          </DialogTrigger>
          <DialogContent className="sm:max-w-[600px]">
            <DialogHeader>
              <DialogTitle>Conectar WhatsApp</DialogTitle>
              <DialogDescription>
                Escaneie o QR Code com seu WhatsApp para estabelecer uma conexão.
              </DialogDescription>
            </DialogHeader>
            <QRCodeScanner onConnected={() => setNewConnectionOpen(false)} />
          </DialogContent>
        </Dialog>
      </div>

      {isLoadingConnections ? (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {[1, 2, 3].map((i) => (
            <div key={i} className="h-[140px] bg-muted rounded-lg animate-pulse" />
          ))}
        </div>
      ) : activeConnectionsCount > 0 ? (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {filteredConnections.map((connection: any) => (
            <ConnectionCard 
              key={connection.id} 
              connection={{
                id: connection.id,
                name: connection.name,
                phoneNumber: connection.phoneNumber,
                status: connection.status,
                stats: connection.stats || {
                  contacts: 0,
                  conversations: 0,
                  flows: 0,
                  automations: 0
                }
              }}
              onDisconnect={() => {
                // O cache será atualizado automaticamente pelo websocket
                console.log("Conexão desconectada, atualizando via WebSocket");
              }}
            />
          ))}
        </div>
      ) : (
        <div className="p-8 text-center border rounded-lg border-dashed">
          <div className="mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-primary-50">
            <svg 
              xmlns="http://www.w3.org/2000/svg" 
              width="24" 
              height="24" 
              viewBox="0 0 24 24" 
              fill="none" 
              stroke="currentColor" 
              strokeWidth="2" 
              strokeLinecap="round" 
              strokeLinejoin="round" 
              className="h-6 w-6 text-primary"
            >
              <path d="M3 20V16.2C3 15.1 3.5 14.1 4.2 13.4L14.4 3.3C14.6 3.1 15 3.1 15.2 3.3L20.7 8.8C20.9 9 20.9 9.4 20.7 9.6L10.6 19.8C9.9 20.5 8.9 21 7.8 21H7"/>
              <path d="M12.8 8.8L15.2 11.2"/>
              <path d="M14 15.2C14 15.2 14.2 15.6 15 16.4C15.8 17.2 16.8 17 16.8 17"/>
              <path d="M4.9 19.1L2 22"/>
            </svg>
          </div>
          <h3 className="mt-2 text-sm font-semibold">Sem conexões ativas</h3>
          <p className="mt-1 text-sm text-muted-foreground">
            Você ainda não tem conexões de WhatsApp ativas.
          </p>
          <div className="mt-6">
            <Button onClick={() => setNewConnectionOpen(true)}>
              <Plus className="h-4 w-4 mr-2" />
              Adicionar Nova Conexão
            </Button>
          </div>
        </div>
      )}
    </div>
  );
}